upstream {{repoName}} {
  server 127.0.0.1:{{portNumber}};

}

server {
    listen 80;
    

    server_name {{appUrl}};
    client_max_body_size 50m;

    location /app {
      alias /var/www/{{repoName}}/dist/app;
    }
    location /components {
      alias /var/www/{{repoName}}/dist/components;
    }
    location /images {
      alias /var/www/{{repoName}}/dist/images;
    }
    location /styles {
      alias /var/www/{{repoName}}/dist/styles;
    }

    location /status {
     proxy_redirect  off;
                    proxy_set_header X-Real-IP      $remote_addr;
                    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
                    proxy_set_header   X-Forwarded-Proto $scheme;
                    proxy_set_header   Host                   $http_host;
                    proxy_set_header   X-NginX-Proxy    true;
                    proxy_set_header   Connection "";
                    proxy_http_version 1.1;
                    proxy_cache one;
                    proxy_cache_key sfs$request_uri$scheme;
                    proxy_pass         http://{{repoName}};
    }

    location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to displaying a 404.

            # include /etc/nginx/naxsi.rules
            proxy_redirect  off;
            proxy_set_header X-Real-IP      $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   Host                   $http_host;
            proxy_set_header   X-NginX-Proxy    true;
            proxy_set_header   Connection "";
            proxy_http_version 1.1;
            proxy_cache one;
            proxy_cache_key sfs$request_uri$scheme;
            # 2) Any request that did not originally come in to the ELB
            #    over HTTPS gets redirected.
            if ($http_x_forwarded_proto != "https") {
              rewrite ^(.*)$ https://$server_name$1 permanent;
            }
            proxy_pass         http://{{repoName}};
    }
}
